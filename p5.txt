 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura?

    954

 ** ¿Cuánto tiempo dura la captura?

    56.14 segundos

 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?

    La captura se hace en la IP 192.168.1.34 ya que en nuestra captura de wireshark, esta IP es o la fuente o el destino de los paquetes. Es una IP privada porque sabemos que la Ip de nuestro terminal es otra y al observar la que aparece en la captura vemos que no coincide, es decir, esta detras de un NAT. 

3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
    
    El porcentaje tanto de paquetes enviados como de porcentaje de bytes es mayor mediante UDP. Ademas sabemos que UDP es mejor para transmitir a tiempo real porque es mas rapido y seguro. Es decir, se transmite en tiempo real y efectivamente, es consistente.

 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
    
    HTTP, DNS, CLASSIC-STUN, SIP, RTP,H.261  e ICMP.

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?

    En los segundos 7,14,16.4, 38, 39, 55.
        

 ** Y los paquetes con RTP, ¿cuándo se envían?
    
    En los segundos, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?

    DNS

 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
    
    La direccion IP del servidor de nombres que ha lanzado Ekiga es la 80.58.61.250

 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?

    Devuelve la 86.64.162.35

 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?

    Se trata de la busqueda de DNS inversa en el dominio especial in -addr.arpa. Se trata de una secuencia conacatenada de numeros decimales obtenidos al dividir la direccion IPv4 (32 bits) en cuatro porciones de 8 bits. Significativamente van de derecha a izquierda.

6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?

    Se mira en un paquete HTTP (cliente --> servidor). La URL pedida es: http://ekiga.net/ip/

 ** ¿Qué user agent (UA) la está pidiendo?

    Ekiga

 ** ¿Qué devuelve el servidor?

    Le devuelve la direccion 83.36.48.212

 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?

    Nuestra direccion es la 212.128.254.170, que al no coincidir con la 83.36.48.212 sabemos que nos encontramos tras un NAT.       

7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.

    Porque permite encontrar la direccion IP publica "escondida" tras el NAT y el puerto de internet asociado con el puerto local a traves de NAT. Esta informacion es usada para configurar una comunicacion UDP entre dos hosts que se encuentran tras enrutadores.

 ** ¿Estamos tras un NAT?

    Si.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
    
    86.64.162.35
    
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?

    5063

 ** ¿Qué método SIP utiliza el UA para registrarse?

    Method: REGISTER. Se encuentra dentro del mensaje SIP, en session Initation Protocol(REGISTER), en el campo Method.

 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?

    INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER y MESSAGE. Estos metodods se encuentran dentro del CONTACT y a su vez dentro de CONTACT URI, en el campo Allow.(Al final del todo).

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?

    No. Nos fijamos en las siguientes tramas SIP. Vemos que la respuesta del servidor es "401 Unauthorized", es decir no la acepta. Ahora nos vamos a la siguiente trama SIP y vemos que se repite el envio de la primera trama (SIP).
    
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?

    Porque al mirar la trama de respuesta vemos "200 OK", es decir, la acepta.

 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)

    El primer registro, el fallido tiene una longitud de 523 mientras que la del  segundo es de 712. Esto se debe a que en el segundo intento hay una autorizacion (Authorization) dentro del campo SIP.

 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.

    3600 segundos. Se puede ver unicamente en la peticion del cliente. (Abajo del todo)

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?

    Si se puede ver. En el campo from aparece "From: Gregorio Robles" y a continuacion su direccion SIP: "<sip:grex@ekiga.net>"

 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?

    El protocolo empleado es SDP(Session Description Protocol). Contiene los datos de la sesion.

 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?

    No. En la trama 103 se repite el mensaje enviado en la 84(primer intento).

 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?

    Se diferencian en el peso del mensaje, siendo el del primero 982 y el del segundo 1181. Esto se debe a que el segundo mensaje lleva un campo más: Proxy-Authorization, situado bajo el campo Contact.

11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
    
    Se utilizan los protcolos H.261, relacionado con la codificacion de video, y RTP.    

 ** ¿Cuál es el tamaño de paquete de los mismos?

    Los mensajes enviados mediante el protocolo h.261 presentan longitudes distintas hasta 1077, mientras que los enviados con RTP 214.

 ** ¿Se utilizan bits de padding?

    No. Si miramos en el campo Real-Time Transport Protocol, vemos que el campo Padding esta a False.

 ** ¿Cuál es la periodicidad de los paquetes que se envían?

    Los mensajes H.261 se envian cada 3600 segundos mientras que los RTP varian.

 ** ¿Cuántos bits/segundo estamos enviando?

    64 Kbits/s

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?

    Nos metemos dentro de telephony, RTP, RTp streams. Hay 2 flujos: Uno de audio(Playload = g711A) y una de video (Playload = h261).

 ** ¿Cuántos paquetes se pierden?

    No se pierden: lost 0 (0.0%)

 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
    
    En el flujo de video el valor maximo del delta es 1290.479, mientras que el valos maximo del delta del flujo de audio es de 119.635. Este valor nos indica la diferencia maxima entra mensajes consecutivos.
    
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
 
    Source Port---> 5014 ; Max Jitter---> 183.096 ; Mean Jitter---> 153.240
    Source Port---> 5010 ; Max Jitter---> 119.635 ; Mean Jitter---> 42.500     

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?

    El primer paquete es el 113. En este caso ambos campos se encuentran a 0,0.

 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?

    Si, garcias al campo Skew

 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?

    Hasta el paquete 246 jitter = 5.76 ms. El siguiente, el 247 tiene un jitter de 38.82 ms.

 ** ¿A qué se debe el cambio tan brusco del jitter?

    Se debe a la velocidad.

 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?

    Si, al ser elevado el valor de delta tambien lo es el del jitter.

 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?

    Estan proporcionalmente conectados, es decir, cuando uno aumenta el otro tambien. Esto se debe al retardo.


14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?

    24.80289 seg

 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?

    Hay 2 SSRC, uno por cada flujo. No hay CSRCs.

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?

    La trama donde se finaliza la conversacion es la 941. El metodo utilizado es BYE.

 ** ¿En qué trama(s)?

    Se utiliza en los paquetes 924, 925, 927, 933.    

 ** ¿Por qué crees que se envía varias veces?

    Porque no recibe el 200 OK que indica que el servidor lo ha recivido.

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
    
    Para dar de baja al usuario y eliminarlo.

 ** ¿En qué trama sucede esto?

    En la 950 se envia pero falla y se vuelve a enviar en la 952 y en la 953 se recive el 200 OK.

 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?

    En el campo expires, que tiene el valor 0 en la trama de fin de sesion mientras que en el de inicio, el campo expires esta a 3600s.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

17. Dirígete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y config´uralo con los datos de la cuenta
que te acabas de crear. Comprueba que est´as conectado (En la barra
al final de la ventana podr´as ver “Connected”). Al terminar, cierra
completamente Ekiga. 
    

18.Captura una sesión SIP de una conversación con el núumero SIP sip:9999@qxip.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso.



19. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?

    Si, EL DNS es necesario para la asignacion de nombres de dominio a la IP y el uso de STUN para conocer la IP QUE ESTA TRAS EL NAT. 

 ** ¿Son diferentes el registro y la descripción de la sesión?

     Podemos ver que son diferentes en el campo Allow, ya que el REGISTER que hemos capturado tiene el siguiente campo: 
Allow: INVITE,ACK,OPTIONS,BYE,CANCEL,SUBSCRIBE,NOTIFY,REFER,MESSAGE,INFO,PING,PRACK, es decir, permite los métodos que se mencionan en dicho campo. En cambio en la captura que analizamos con anterioridad podemos observar que el campo Allow era más reducido, ya que solamente permitía los métodos: INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER, MESSAGE.
 Otra de las diferencias es que se emplean puertos distintos.


20. Identifica las diferencias existentes entre esta conversación y la conversación
anterior:
 ** ¿Cuántos flujos tenemos?

Tenemos dos flujos. Desde un emisor (nosotros) a un receptor es uno de los flujos y el otro en sentido opuesto (receptor-emisor). Ambos flujos son de audio (g711U).

 ** ¿Cuál es su periodicidad?


 **¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?

 Source Port--->5090 ; Max delta--->30.646 ; Mean jitter--->3.476 ; Max jitter--->6.294
    Source Port--->34810 ; Max delta--->75.600 ; Mean jitter--->1.393 ; Max jitter--->6.294

 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversacón puede no tener la calidad necesaria.

Para poder reproducir la conversación desde Wireshark, debemos ir a Telephony y elegir la opción VoIP Calls, después primero damos a Play y luego Decode, y de esta forma se reproduce. Al reproducir con un buffer de jitter muy pequeño la conversación se escucha entrecortada, se pierden palabras.Lo he intentado con un buffer muy pequeño.


 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?

Ofrece un servicio de canciones ocmo podemos ver al reproducir el auido.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]



21. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.pcapng y añadirlo al repositorio.



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
